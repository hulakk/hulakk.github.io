<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>存储系统</title>
    <link href="/2021/12/02/%E5%AD%98%E5%82%A8%E7%B3%BB%E7%BB%9F-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90/"/>
    <url>/2021/12/02/%E5%AD%98%E5%82%A8%E7%B3%BB%E7%BB%9F-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90/</url>
    
    <content type="html"><![CDATA[<h2 id="存储系统概述"><a href="#存储系统概述" class="headerlink" title="存储系统概述"></a>存储系统概述</h2><h3 id="存储系统的层次结构"><a href="#存储系统的层次结构" class="headerlink" title="存储系统的层次结构"></a>存储系统的层次结构</h3><p>存储器分层解决了存储器的性能价格矛盾。</p><h4 id="程序的局部性原理"><a href="#程序的局部性原理" class="headerlink" title="程序的局部性原理"></a>程序的局部性原理</h4><p>统计表明，无论是访问存取指令还是存储数据，在一个较短的时间间隔内，程序所访问的存储器地址在很大比例上集中在存储器地址空间的很小范围内。这种<strong>在某一段时间频繁访问某一局部的存储器地址空间，而对此范围以外的地址空间则很少访问的现象称为程序的局部性原理</strong>。</p><div class="note note-info">            <p>程序的局部性原理可以从两个角度分析。<br>(1)时间局部性：最近被访问的信息很可能在邻近时间内再次被访问。<br>(2)空间局部性：最近被访问的信息邻近地址的信息很可能被访问。</p>          </div><h4 id="多级存储系统的组成"><a href="#多级存储系统的组成" class="headerlink" title="多级存储系统的组成"></a>多级存储系统的组成</h4><p>在CPU内部有少量寄存器可以存储正在执行的指令或者正在参加运算的数据，寄存器的访问速度非常快，但数量较少。正在执行的指令和数据存储在CPU能直接访问的存储器（<strong>内存储器</strong>）中。内存储器速度高、容量小、价格高，由半导体器件构成。</p><p>为了扩大存储容量，在内存储器之外增加容量更大的但访问速度稍慢的<strong>外存储器</strong>，或者称为辅助存储器（辅存）。相对而言，外存储器价格低、容量大、价格便宜，可以由磁盘导体存储器、光盘存储器等非半导体器件或固态半导体存储器构成。CPU不能直接访问外存储器，外存储器的信息必须调入内存储器后才能由CPU处理。</p><p>内存储器和外存储器构成两级存储系统。</p><p>随着半导体技术的发展，CPU和内存储器的工作速度都在提高，但CPU速度提高得更快，而更高速度的内存储器价格非常高。为此，人们在常规内存储器和CPU之间增加了速度更高但容量更小的<strong>高速缓冲存储器</strong>，即cache，用于存放常规内存中正在使用的一些信息块的副本。常规的内存被称为主存。这样，内存储器就分为cache和主存两部分，由此构成三级存储系统:</p><p>CPU内：寄存器、cache<br>主板内：cache、主存<br>主板外：磁盘、光盘</p><h3 id="存储器的分类"><a href="#存储器的分类" class="headerlink" title="存储器的分类"></a>存储器的分类</h3><p>存储位元：存储一位二进制代码的存储单位</p><table><thead><tr><th>分类依据</th><th>类别</th></tr></thead><tbody><tr><td>存储介质</td><td>半导体存储器、磁表面存储器、光存储器</td></tr><tr><td>存取方式</td><td>随机存取存储器、顺序存取存储器、半顺序存取存储器</td></tr><tr><td>读写功能</td><td>制度存储器、随机存取存储器</td></tr><tr><td>信息易失性</td><td>易失性存储器、非易失性存储器</td></tr><tr><td>与CPU的耦合程度</td><td>内部存储器、外部存储器</td></tr></tbody></table><p>计算机系统的主存习惯上被分为RAM和ROM两类。RAM用来储存当前运行的程序和数据，并可以在程序运行过程中反复更改其内容。而ROM常用来储存不变或基本不变的程序和数据（如监控程序、引导加载程序及常数表格等）。RAM可以根据信息存储方法分为<strong>静态RAM</strong>(SRAM)和<strong>动态RAM</strong>(DRAM)。SRAM是用半导体管的“到同”或“截止”来记忆的，只要不掉电，储存的信息就不会丢失。而DRAM的信息使用电荷存储在电容上，随着时间的退役，电荷会逐渐漏掉，储存的信息就会丢失，因此要周期性地对其进行“刷新”。根据工艺和特性的不同，只读存储器又分为掩膜ROM、一次性可编程ROM(PROM)和可擦除PROM(EPROM)，EPROM又分为紫外线擦除EPROM(UV-EPROM)、电擦除EPROM(EEPROM)和闪存只读存储器。</p><h3 id="存储器的编址和端模式"><a href="#存储器的编址和端模式" class="headerlink" title="存储器的编址和端模式"></a>存储器的编址和端模式</h3>]]></content>
    
    
    <categories>
      
      <category>计算机组成</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2021/12/02/hello-world/"/>
    <url>/2021/12/02/hello-world/</url>
    
    <content type="html"><![CDATA[<p>这篇文章是写给自己看的，关于博客内容管理的，内容较为简略，更为详细的内容在这里：<br><a href="https://hexo.io/zh-cn/docs/" title="点击跳转">hexo官方文档</a><br><a href="https://hexo.fluid-dev.com/docs" title="点击跳转">fluid主题官方文档</a>  </p><h3 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h3><p><code>_config.yml</code>是全局配置，<code>_config.fluid.yml</code>是主题配置  </p><h3 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h3><p>生成的静态文件为整个<code>public</code>目录，由于资源文件的链接均采用绝对路径（若改为相对路径，主题会出bug），因此必须将<code>public</code>文件夹作为网站的根目录  </p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
